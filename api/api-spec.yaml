openapi: 3.0.0
info:
  version: 1.0.0
  title: Web Drones
  description: Api to play Web Drones!
paths:
  /login:
    post:
      description: Log in with username and password.
      security:
        - basicAuth: []
      responses:
        '200':
          description: Returns login cookie on success
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Returns when login fails from bad username/password combo
          content:
            text/plain:
              schema:
                type: string
  /newUser:
    post:
      description: Creates new user with associated password
      security:
        - basicAuth: []
      responses:
        '200':
          description: Creates new user and logs them in on success 
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Returns when login fails from bad username/password combo
          content:
            text/plain:
              schema:
                type: string
  /init:
    post:
      description: initialize the game with mining locations and a single bot (temporary)
      responses:
        '200':
          description: returns starting bots and mines
          content:
            application/json:
              schema:
                type: object
                properties:
                  bots:
                    type: array
                    items:
                      $ref: "#/components/schemas/Bot"
                  mines:
                    type: array
                    items:
                      $ref: "#/components/schemas/Coordinates"
                required:
                  - bots
                  - mines
  /bots:
    get:
      description: Get an array of bots and what they're doing
      responses:
        '200':
          description: array of all bots
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bot'
  /bots/{botId}:
    get:
      description: Get a single bot by id
      parameters:
        - name: botId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: single bot with associated unique identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
  /bots/{botId}/move:
    post:
      description: Move bot to new location
      parameters:
        - name: botId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coordinates'
      responses:
        '200':
          description: returns single bot with the Id that was commanded to move
          'content':
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
  /bots/{botId}/extract:
    post:
      description: Mine scrap metal from bot's current location. Only works when bot is near a mine.
      parameters:
        - name: botId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns bot that mined for scrap
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        '422':
          description: Sent when bot is not currently near a mine
          content:
            text/plain:
              schema:
                type: string
  /bots/{botId}/newBot:
    post:
      description: Make a new bot from scrap metal. A bot must have 3 scrap in their inventory to do this.
      parameters:
        - name: botId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NewBotName:
                  type: string
              required:
                - NewBotName
              
      responses:
        '200':
          description: Information about the newly created bot
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bot"
        '422':
          description: Sent when requested bot does not have enough scrap to make a new one.
          content:
            text/plain:
              schema:
                type: string
  /mines:
    get:
      description: Get the coordinates of mines
      responses:
        '200':
          description: Returns coordinates of all mines in the world
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coordinates'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: SESSIONID
  schemas:
    Bot:
      type: object
      properties:
        identifier: 
          type: string
        name: 
          type: string
        status:
          type: string
          enum: ["IDLE", "MOVING", "MINING"]
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        inventory:
          type: integer
      required:
        - identifier
        - name
        - status
        - coordinates
        - inventory
    Coordinates:
      type: object
      properties:
        x:
          type: number
          format: double
        y:
          type: number
          format: double
      required:
        - x
        - y
    Error:
      type: string

security:
  - cookieAuth: []
