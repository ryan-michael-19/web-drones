//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var BotMovementLedger = newBotMovementLedgerTable("public", "bot_movement_ledger", "")

type botMovementLedgerTable struct {
	postgres.Table

	// Columns
	ID                postgres.ColumnInteger
	CreatedAt         postgres.ColumnTimestampz
	UpdatedAt         postgres.ColumnTimestampz
	BotID             postgres.ColumnInteger
	UserID            postgres.ColumnInteger
	TimeActionStarted postgres.ColumnTimestampz
	NewX              postgres.ColumnFloat
	NewY              postgres.ColumnFloat

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type BotMovementLedgerTable struct {
	botMovementLedgerTable

	EXCLUDED botMovementLedgerTable
}

// AS creates new BotMovementLedgerTable with assigned alias
func (a BotMovementLedgerTable) AS(alias string) *BotMovementLedgerTable {
	return newBotMovementLedgerTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new BotMovementLedgerTable with assigned schema name
func (a BotMovementLedgerTable) FromSchema(schemaName string) *BotMovementLedgerTable {
	return newBotMovementLedgerTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new BotMovementLedgerTable with assigned table prefix
func (a BotMovementLedgerTable) WithPrefix(prefix string) *BotMovementLedgerTable {
	return newBotMovementLedgerTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new BotMovementLedgerTable with assigned table suffix
func (a BotMovementLedgerTable) WithSuffix(suffix string) *BotMovementLedgerTable {
	return newBotMovementLedgerTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newBotMovementLedgerTable(schemaName, tableName, alias string) *BotMovementLedgerTable {
	return &BotMovementLedgerTable{
		botMovementLedgerTable: newBotMovementLedgerTableImpl(schemaName, tableName, alias),
		EXCLUDED:               newBotMovementLedgerTableImpl("", "excluded", ""),
	}
}

func newBotMovementLedgerTableImpl(schemaName, tableName, alias string) botMovementLedgerTable {
	var (
		IDColumn                = postgres.IntegerColumn("id")
		CreatedAtColumn         = postgres.TimestampzColumn("created_at")
		UpdatedAtColumn         = postgres.TimestampzColumn("updated_at")
		BotIDColumn             = postgres.IntegerColumn("bot_id")
		UserIDColumn            = postgres.IntegerColumn("user_id")
		TimeActionStartedColumn = postgres.TimestampzColumn("time_action_started")
		NewXColumn              = postgres.FloatColumn("new_x")
		NewYColumn              = postgres.FloatColumn("new_y")
		allColumns              = postgres.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, BotIDColumn, UserIDColumn, TimeActionStartedColumn, NewXColumn, NewYColumn}
		mutableColumns          = postgres.ColumnList{CreatedAtColumn, UpdatedAtColumn, BotIDColumn, UserIDColumn, TimeActionStartedColumn, NewXColumn, NewYColumn}
	)

	return botMovementLedgerTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                IDColumn,
		CreatedAt:         CreatedAtColumn,
		UpdatedAt:         UpdatedAtColumn,
		BotID:             BotIDColumn,
		UserID:            UserIDColumn,
		TimeActionStarted: TimeActionStartedColumn,
		NewX:              NewXColumn,
		NewY:              NewYColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
